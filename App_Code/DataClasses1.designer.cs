#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Payment")]
public partial class DataClasses1DataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBilling(Billing instance);
  partial void UpdateBilling(Billing instance);
  partial void DeleteBilling(Billing instance);
  #endregion
	
	public DataClasses1DataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PaymentConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses1DataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses1DataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Billing> Billings
	{
		get
		{
			return this.GetTable<Billing>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billing")]
public partial class Billing : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CreditCardNo;
	
	private string _Bank;
	
	private string _CardHolderName;
	
	private string _BillingAddress1;
	
	private string _BillingAddress2;
	
	private string _Town;
	
	private string _Country;
	
	private string _Postcode;
	
	private string _ContactNo;
	
	private string _Email;
	
	private string _BookingNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditCardNoChanging(string value);
    partial void OnCreditCardNoChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnCardHolderNameChanging(string value);
    partial void OnCardHolderNameChanged();
    partial void OnBillingAddress1Changing(string value);
    partial void OnBillingAddress1Changed();
    partial void OnBillingAddress2Changing(string value);
    partial void OnBillingAddress2Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBookingNoChanging(string value);
    partial void OnBookingNoChanged();
    #endregion
	
	public Billing()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardNo", DbType="NChar(20)")]
	public string CreditCardNo
	{
		get
		{
			return this._CreditCardNo;
		}
		set
		{
			if ((this._CreditCardNo != value))
			{
				this.OnCreditCardNoChanging(value);
				this.SendPropertyChanging();
				this._CreditCardNo = value;
				this.SendPropertyChanged("CreditCardNo");
				this.OnCreditCardNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NChar(30)")]
	public string Bank
	{
		get
		{
			return this._Bank;
		}
		set
		{
			if ((this._Bank != value))
			{
				this.OnBankChanging(value);
				this.SendPropertyChanging();
				this._Bank = value;
				this.SendPropertyChanged("Bank");
				this.OnBankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardHolderName", DbType="NChar(30)")]
	public string CardHolderName
	{
		get
		{
			return this._CardHolderName;
		}
		set
		{
			if ((this._CardHolderName != value))
			{
				this.OnCardHolderNameChanging(value);
				this.SendPropertyChanging();
				this._CardHolderName = value;
				this.SendPropertyChanged("CardHolderName");
				this.OnCardHolderNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress1", DbType="NChar(30)")]
	public string BillingAddress1
	{
		get
		{
			return this._BillingAddress1;
		}
		set
		{
			if ((this._BillingAddress1 != value))
			{
				this.OnBillingAddress1Changing(value);
				this.SendPropertyChanging();
				this._BillingAddress1 = value;
				this.SendPropertyChanged("BillingAddress1");
				this.OnBillingAddress1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress2", DbType="NChar(30)")]
	public string BillingAddress2
	{
		get
		{
			return this._BillingAddress2;
		}
		set
		{
			if ((this._BillingAddress2 != value))
			{
				this.OnBillingAddress2Changing(value);
				this.SendPropertyChanging();
				this._BillingAddress2 = value;
				this.SendPropertyChanged("BillingAddress2");
				this.OnBillingAddress2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NChar(30)")]
	public string Town
	{
		get
		{
			return this._Town;
		}
		set
		{
			if ((this._Town != value))
			{
				this.OnTownChanging(value);
				this.SendPropertyChanging();
				this._Town = value;
				this.SendPropertyChanged("Town");
				this.OnTownChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NChar(35)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="NChar(30)")]
	public string Postcode
	{
		get
		{
			return this._Postcode;
		}
		set
		{
			if ((this._Postcode != value))
			{
				this.OnPostcodeChanging(value);
				this.SendPropertyChanging();
				this._Postcode = value;
				this.SendPropertyChanged("Postcode");
				this.OnPostcodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="NChar(15)")]
	public string ContactNo
	{
		get
		{
			return this._ContactNo;
		}
		set
		{
			if ((this._ContactNo != value))
			{
				this.OnContactNoChanging(value);
				this.SendPropertyChanging();
				this._ContactNo = value;
				this.SendPropertyChanged("ContactNo");
				this.OnContactNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(40)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingNo", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string BookingNo
	{
		get
		{
			return this._BookingNo;
		}
		set
		{
			if ((this._BookingNo != value))
			{
				this.OnBookingNoChanging(value);
				this.SendPropertyChanging();
				this._BookingNo = value;
				this.SendPropertyChanged("BookingNo");
				this.OnBookingNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
